// Global variables
uint8_t wb_config = 1;

// Prototypes
void setup_i2c(void);
int16_t read_i2c_address(uint8_t addr , uint8_t n , uint8_t data[]);
bool checkack(uint32_t delayVal);
int16_t write_i2c_address(uint8_t addr , uint8_t nToWrite , uint8_t data[], bool stop);
void dump_wb(void);
uint32_t hex_str_to_uint32(char *buffer);
void delay(uint32_t n );
bool enable_i2c_bridge();
int16_t read_E24AA025E48T();
uint16_t zero_buffer( uint8_t buffer[] , uint16_t elements);
int16_t write_Prom();
uint32_t read_Prom();
int16_t  read_i2c_prom( uint8_t startAddress , uint8_t wordsToRead , uint8_t buffer[] );
int16_t write_i2c_prom( uint8_t startAddress , uint8_t wordsToWrite, uint8_t buffer[] );
void uint8_to_decimal_str( uint8_t value , char *buffer) ;

#define DEBUG 1
#define DELAYVAL 512

// Configuration
#define MAX_CMD_LENGTH 16
#define BAUD_RATE 19200

#define MAX_N    16

#define ENABLECORE 0x1 << 7
#define STARTCMD 0x1 << 7
#define STOPCMD  0x1 << 6
#define READCMD  0x1 << 5
#define WRITECMD 0x1 << 4
#define ACK      0x1 << 3
#define INTACK   0x1

#define RECVDACK 0x1 << 7
#define BUSY     0x1 << 6
#define ARBLOST  0x1 << 5
#define INPROGRESS  0x1 << 1
#define INTERRUPT 0x1

// Multiply addresses by 4 to go from byte addresses (Wishbone) to Word addresses (IPBus)
#define ADDR_PRESCALE_LOW 0x0
#define ADDR_PRESCALE_HIGH 0x4
#define ADDR_CTRL 0x8
#define ADDR_DATA 0xC
#define ADDR_CMD_STAT 0x10

// I2C address of Crypto EEPROM on AX3
#define MYSLAVE 0x64

// I2C address of UiD EEPROM on TLU
#define EEPROMADDRESS  0x50

// PROM memory address start...
#define PROMMEMORYADDR 0x00

uint8_t buffer[MAX_N];
char command[MAX_CMD_LENGTH];
